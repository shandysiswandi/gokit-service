// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	entity "github.com/shandysiswandi/gokit-service/entity"
	mock "github.com/stretchr/testify/mock"
)

// CacheReaderWriter is an autogenerated mock type for the CacheReaderWriter type
type CacheReaderWriter struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *CacheReaderWriter) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAllTodo provides a mock function with given fields:
func (_m *CacheReaderWriter) GetAllTodo() []entity.Todo {
	ret := _m.Called()

	var r0 []entity.Todo
	if rf, ok := ret.Get(0).(func() []entity.Todo); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entity.Todo)
		}
	}

	return r0
}

// GetTodoByID provides a mock function with given fields:
func (_m *CacheReaderWriter) GetTodoByID() entity.Todo {
	ret := _m.Called()

	var r0 entity.Todo
	if rf, ok := ret.Get(0).(func() entity.Todo); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(entity.Todo)
	}

	return r0
}

// SetAllTodo provides a mock function with given fields:
func (_m *CacheReaderWriter) SetAllTodo() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetTodoByID provides a mock function with given fields:
func (_m *CacheReaderWriter) SetTodoByID() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
